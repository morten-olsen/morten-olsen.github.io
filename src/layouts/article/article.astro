---
import { Picture } from 'astro:assets'
import { render } from 'astro:content';

import { type Article, data } from '@/data/data.js'
import { getArticleJsonLD } from '@/data/data.utils'

import Html from '../html/html.astro'

type Props = {
  article: Article
}
const { props } = Astro
const { article } = props
const { Content } = await render(article);
console.log('foo', Content)
---

<Html
  title={article.data.title}
  description={article.data.description}
  jsonLd={getArticleJsonLD(data, article)}
>
  <article>
    <header>
      <h1>
        {article.data.title.split(' ').map((word) => <span>{word}</span>)}
      </h1>
      <a href='/'><h2>By {data.profile.basics.name}</h2></a>
    </header>
    <Picture
      loading='eager'
      class='img'
      src={article.data.heroImage}
      widths={[320, 640, 1024, 1400]}
      formats={['avif', 'webp', 'png']}
      alt='Cover image'
    />
    <div class='content'>
      <Content />
    </div>
  </article>
</Html>
<style lang='less'>
  article {
    --left-padding: 100px;
    display: grid;
    letter-spacing: 0.08rem;
    font-size: 1rem;
    line-height: 2.1rem;
    grid-template-columns: 1fr calc(50ch + var(--left-padding)) 2fr;
    grid-template-rows: auto;
    grid-template-areas:
      '. title cover'
      '. content cover';
  }

  article :global(picture) {
    grid-area: cover;
    position: relative;
  }

  .img {
    max-width: 100%;
    height: 100vh;
    top: 0;
    position: sticky;
    object-fit: cover;
    object-position: center;
    right: 0;
    clip-path: polygon(40% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 50%);
  }

  header {
    grid-area: title;
    height: 80vh;
    display: flex;
    justify-content: center;
    flex-direction: column;
  }

  h2 {
    font-size: 1.5rem;
    font-weight: 300;
    color: #fff;
    text-transform: uppercase;
    margin-top: var(--space-md);
    color: #000;
  }

  h1 {
    display: flex;
    flex-wrap: wrap;
    font-size: 4rem;
    line-height: 1;
    color: #fff;
    text-transform: uppercase;
    font-weight: 400;
    gap: 1rem;

    span {
      display: inline-block;
      background: red;
      padding: 0.5rem 1rem;
    }
  }

  .content {
    grid-area: content;
    padding: var(--space-xl);
    padding-left: var(--left-padding);

    :global(img) {
      max-width: 100%;
      height: auto;
      margin-bottom: var(--space-lg);
    }

    :global(p) {
      text-align: justify;
      margin-bottom: var(--space-lg);
    }

    :global(p):first-of-type {
      &:first-letter {
        font-size: 5rem;
        border: 5px solid #000;
        float: left;
        padding: 0 var(--space-md);
        margin-right: 1rem;
        line-height: 1;
      }
    }
  }

  @media (max-width: 1024px) {
    article {
      --left-padding: 0;
      grid-template-columns: 1fr;
      grid-template-areas:
        'title'
        'cover'
        'content';
    }

    article :global(picture) {
      position: absolute;
      z-index: -1;
      height: 80vh;
    }

    .img {
      clip-path: none;
      height: 80vh;
      opacity: 0.5;
    }

    header {
      padding: var(--space-xl);
      height: 80vh;
    }

    h1 {
      font-size: 2.5rem;
    }

    h2 {
      font-size: 1.2rem;
    }

    .content {
      padding: var(--space-lg);
    }
  }
</style>
